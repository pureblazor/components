@inherits PureComponent
@namespace Pure.Blazor.Components

@if (Variant is null or PureVariant.Subtle)
{
    <a class="@AccessibilityStyles @ApplyStyle(Variant is not null ? InternalCss : Css.Base)" href="@Href" target="@GetTarget()">@ChildContent</a>
}
else
{
    <a class="@ApplyStyle(InternalCss)"
       href="@Href" target="@GetTarget()">
        @ChildContent
    </a>
}

@code {

    [Parameter] public string? Href { get; set; }

    /// <summary>
    ///     Style the link as a button
    /// </summary>
    [Parameter]
    public PureVariant? Variant { get; set; }

    [Parameter] public Accent Accent { get; set; } = Accent.Brand;

    [Parameter] public LinkTarget Target { get; set; }

    // required styles for accessibility, not overridable
    // touch target should be at least 24px
    private string AccessibilityStyles => "inline-block py-1";
    private string InternalCss => $"{CssStyle("PureButton").Base} {CssStyle("PureButton").Variant(Variant ?? PureVariant.Subtle, Accent)} {CssStyle("PureButton").Size(PureSize.Medium)}";

    private string GetTarget()
    {
        return Target switch
        {
            LinkTarget.NewTab => "_blank",
            _ => "_self"
        };
    }

}
