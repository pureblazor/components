@inherits PureInputBase
@using Microsoft.AspNetCore.Components.Forms
@implements IFormComponent
@inject ILogger<PureInput> Log

<div class="@ApplyStyle("flex flex-col relative", ContainerStyles)">
    @if (!string.IsNullOrWhiteSpace(Label))
    {
        if (LabelType == PureLabelType.Default)
        {
            <PureLabel For="@Id">@Label</PureLabel>
        }
    }
    <InputText id="@Id"
               @ref="InputRef"
               @bind-Value="@TextValue"
               class="@($"{ApplyStyle(baseCss)} {(HasError ? errorBorder : defaultBorder)}")"
               type="@GetInputType()"
               autocomplete="@GetAutoComplete()"
               placeholder="@Placeholder"
               name="@Name"
               @onchange="OnChange"
               @oninput="OnInput"
               required="@Required"
               @onblur="OnBlur"/>


    @if (Suffix != null)
    {
        <div @onclick="() => { OnSuffixClick.InvokeAsync(); }" class="absolute inset-y-0 right-0 flex items-center px-4 cursor-pointer group @suffixCss">
            @Suffix
        </div>
    }
    @if (!string.IsNullOrWhiteSpace(Label) && LabelType == PureLabelType.Floating)
    {
        <!-- todo: integrate bg color with customization / user selected bg color -->
        <label for="@Id" class="cursor-text bg-slate-100 absolute left-2 peer-placeholder-shown:left-2 -top-3 text-gray-800 text-sm transition-all peer-placeholder-shown:bg-transparent peer-focus:bg-slate-100 peer-placeholder-shown:top-3 peer-focus:-top-3 peer-focus:text-sm">@Label</label>
    }
    @if (!string.IsNullOrWhiteSpace(HelperText) && string.IsNullOrWhiteSpace(errorMessage))
    {
        <span class="text-xs font-sans text-gray-800 py-2">@HelperText</span>
    }
    else if (!string.IsNullOrWhiteSpace(errorMessage))
    {
        <span class="text-xs font-sans text-red-700 py-2">@errorMessage</span>
    }

</div>
