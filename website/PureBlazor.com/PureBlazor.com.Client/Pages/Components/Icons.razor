@layout DocsLayout
@page "/components/icons"
@attribute [PureBlazorPage("components-icons")]
@rendermode InteractiveWebAssembly
@* @rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false)) *@
<PageTitle>Icons - PureBlazor Components</PageTitle>

<PageHeader Id="overview" Subtitle="">
    <ChildContent>
        Icons
    </ChildContent>
    <Suffix>
        <SupportedRenderModes Wasm="true" Server="true" Static="true"/>
    </Suffix>
</PageHeader>

<div class="mb-10 flex flex-col gap-6">
    <div class="flex flex-col gap-4">
        <div>
            <Header2 Id="default" Styles="py-4">PureIcon</Header2>
            <PureCode Language="@PureCode.Razor" Styles="mb-4" Caption="Code Sample">
                @sample
            </PureCode>
            <DocumentationCard Component="typeof(PureIcon)">
                <div class="grid grid-cols-3 sm:grid-cols-6 gap-6">
                    @foreach (var icon in icons)
                    {
                        <div class="col-span-1 border-1 border-gray-100 hover:border-gray-300 flex flex-col gap-2 rounded px-2 py-4 items-center">
                            <PureIcon Icon="@icon"/>
                            <span class="text-xs">@icon.ToString().Substring(4)</span>
                        </div>
                    }
                </div>
            </DocumentationCard>
            <PureBanner Styles="mt-4" Accent="Brand" Variant="Outline">Icons are currently from the <PureLink Target="LinkTarget.NewTab" href="https://heroicons.com/">heroicons</PureLink> library.</PureBanner>
        </div>
    </div>
</div>

@code {
    private readonly string sample = @"<PureIcon Icon=""IconPuzzle"" />";
    private readonly List<PureIcons> icons = [];

    protected override void OnInitialized()
    {
        icons.AddRange(Enum.GetValues<PureIcons>().Where(p => p != PureIcons.IconNone));
    }

}
